version: '3'

vars:
  MIGRATIONS_DIR: ./migrations
  DB_DRIVER: postgres
  DB_STRING: "postgres://test:test@localhost:5433/test?sslmode=disable"

tasks:

  container-build:
    cmds:
      - |
        docker build \
          --build-arg GO_SVC_PATHS=. \
          --build-arg SERVICE_NAME=auth_service \
          --build-arg VERSION=1.0.0 \
          -t auth_service:1.0.0 .



  generate-proto:
    desc: Генерация Go-кода из .proto файлов
    cmds:
      - |
        protoc --proto_path=api/ \
               --proto_path=proto_libs/ \
               --go_out=paths=source_relative:proto/ \
               --go-grpc_out=paths=source_relative:proto/ \
               --grpc-gateway_out=paths=source_relative:proto/ \
               --descriptor_set_out=proto/reflect_descriptor.pb \
               --go-grpc_opt=require_unimplemented_servers=false \
               --grpc-gateway_opt=logtostderr=true \
               --include_imports \
               --include_source_info \
               $(find api/ -name "*.proto")
    deps:
      - install-proto-plugins

  install-proto-plugins:
    desc: Установка плагинов protoc для Go
    cmds:
      - go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
      - go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
      - go install github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-grpc-gateway@latest
    silent: true


  migrate-up:
    desc: Запуск всех доступных миграций
    cmds:
      - goose -dir {{.MIGRATIONS_DIR}} {{.DB_DRIVER}} "{{.DB_STRING}}" up

  migrate-down:
    desc: Откат последней миграции
    cmds:
      - goose -dir {{.MIGRATIONS_DIR}} {{.DB_DRIVER}} "{{.DB_STRING}}" down


  migrate-create:
    desc: "Create a new SQL migration file. for example: 'task migrate:create NAME=new_migration' "
    cmds:
      - |
        if [ -z "{{.NAME}}" ]; then
          echo "Usage: task migration-create NAME=<migration_name>"
        else
          cd migrations && goose create {{.NAME}} sql
        fi
    silent: true

  enviroment-up:
    desc: Запуск сторонних сервисов для тестирования
    cmds:
      - docker-compose up -d


  generate:
    desc: "Генерация моков, конвертеров, подкачка вендоров"
#    deps:
#      - mocks
    cmds:
      - go generate ./...
      - go mod tidy && go mod vendor
